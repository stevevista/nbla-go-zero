// Copyright (c) 2017 Sony Corporation. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *WARNING*
// THIS FILE IS AUTO-GENERATED BY CODE GENERATOR.
// PLEASE DO NOT EDIT THIS FILE BY HAND!
// If you want to modify this file, edit following files.
// - build-tools/code_generator/templates/src_nbla_cuda_cudnn_init_cpp_template.cpp
// - build-tools/code_generator/generator/generate_src_nbla_cuda_cudnn_init_cpp.py


#include <nbla/array/cpu_array.hpp>
#include <nbla/array_registry.hpp>
#include <nbla/cuda/array/cuda_array.hpp>
#include <nbla/cuda/cudnn/cudnn.hpp>
{include_functions}
#include <nbla/cuda/cudnn/init.hpp>
#include <nbla/function_registry.hpp>
#include <nbla/init.hpp>
namespace nbla {{

void init_cudnn() {{
  static bool is_initialized = false;
  if (is_initialized)
    return;

  // Init CPU features
  init_cpu();
  init_cuda();

  // Array registration
  NBLA_REGISTER_ARRAY_CREATOR(CudaArray);
  NBLA_REGISTER_ARRAY_SYNCHRONIZER(CpuArray, CudaArray,
                                   synchronizer_cpu_array_cuda_array);
  NBLA_REGISTER_ARRAY_SYNCHRONIZER(CudaArray, CpuArray,
                                   synchronizer_cuda_array_cpu_array);

  // Function registration
{register_functions}

  is_initialized = true;
}}
}}
